#pragma once

import "UniqueCreator.Graphics.Gpu.ComputeCommandContext.idl";
import "UniqueCreator.Graphics.Gpu.GraphicsPipelineState.idl";
import "UniqueCreator.Graphics.Gpu.BackBuffer.idl";

namespace UniqueCreator
{
    namespace Graphics
    {
        namespace Gpu
        {
            interface IGraphicsComputeCommandContext requires IComputeCommandContext
            {
                void SetGraphicsPipelineStateObject(GraphicsPipelineState pso);

                void Clear(IBackBuffer b);
                void SetPrimitiveTopology(PrimitiveTopology t);

                void Draw(UInt32 vertexCount, UInt32 vertexOffset);

                void SetViewPort(ViewPort vp);
                void SetScissorRectangle(Rectangle2D r);
                void SetRenderTarget(IBackBuffer b);

                void TransitionResource(IVirtualResource r, ResourceState old_state, ResourceState new_state);
            }
        }
    }
}
