#pragma once

import "UniqueCreator.Graphics.Gpu.GraphicTypes.idl";
import "UniqueCreator.Graphics.Gpu.ColorBuffer.idl";
import "UniqueCreator.Graphics.Gpu.DepthBuffer.idl";
import "UniqueCreator.Graphics.Gpu.ByteAddressBuffer.idl";
import "UniqueCreator.Graphics.Gpu.Texture2D.idl";
import "UniqueCreator.Graphics.Gpu.UploadBuffer.idl";

namespace UniqueCreator
{
    namespace Graphics
    {
        namespace Gpu
        {
            runtimeclass ResourceCreateContext
            {
                ResourceCreateContext();

                void Sync();
                void ResetViewDependentResources();

                FrameColorBuffer        CreateFrameColorBuffer(UInt32 width, UInt32 height, GraphicsFormat format, ResourceState initialState);
                FrameDepthBuffer        CreateFrameDepthBuffer(UInt32 width, UInt32 height, DepthBufferFormat format, ResourceState initialState);
				FrameDepthStencilBuffer CreateFrameDepthStencilBuffer(UInt32 width, UInt32 height, DepthStencilBufferFormat format, ResourceState initialState);
                
                ViewColorBuffer			CreateViewColorBuffer(UInt32 width, UInt32 height, GraphicsFormat format);
                ViewDepthBuffer			CreateViewDepthBuffer(UInt32 width, UInt32 height, DepthBufferFormat format);
                ViewDepthStencilBuffer	CreateViewDepthStencilBuffer(UInt32 width, UInt32 height, DepthStencilBufferFormat format);

				ByteAddressBuffer		CreateByteAddressBuffer(UInt32 size, ResourceState initialState);
				Texture2D				CreateTexture2D(UInt32 width, UInt32 height, UInt32 mips, GraphicsFormat format, ResourceState initialState);

				UploadBuffer			CreateUploadBuffer(UInt32 size);
            }
        }
    }
}
