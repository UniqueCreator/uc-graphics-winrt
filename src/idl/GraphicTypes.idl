namespace UniqueCreator
{
    namespace Graphics
    {
        struct Size2D
        {
            Single m_width;
            Single m_height;
        };

        //[version(1.0)]
        struct Size3D
        {
            Single m_width;
            Single m_height;
            Single m_depth;
        };

        //[version(1.0)]
        struct Rectangle2D
        {
            Single m_left;
            Single m_top;
            Single m_right;
            Single m_bottom;
        };

        //[version(1.0)]
        struct ViewPort
        {
            Single m_topLeftX;
            Single m_topLeftY;
            Single m_width;
            Single m_height;
            Single m_minDepth;
            Single m_maxDepth;
        };

        enum ResourceState
        {
            Common = 0,
            VertexAndConstantBuffer = 0x1,
            IndexBuffer = 0x2,
            RenderTarget = 0x4,
            UnorderedAccess = 0x8,
            DepthWrite = 0x10,
            DepthRead = 0x20,
            NonPixelShaderResource = 0x40,
            PixelShaderResource = 0x80,
            StreamOut = 0x100,
            IndirectArgument = 0x200,
            CopyDestination = 0x400,
            CopySource = 0x800,
            ResolveDestination = 0x1000,
            ResolveSource = 0x2000,
            GenericRead = (((((0x1 | 0x2) | 0x40) | 0x80) | 0x200) | 0x800),
            Present = 0,
            Predication = 0x200
        };

        struct GpuVirtualAddress
        {
            UInt64   m_value;
        };

    }
}


