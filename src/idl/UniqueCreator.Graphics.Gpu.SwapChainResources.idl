#pragma once

import "UniqueCreator.Graphics.Gpu.FenceHandle.idl";
import "UniqueCreator.Graphics.Gpu.BackBuffer.idl";
import "UniqueCreator.Graphics.Gpu.GraphicsCommandContext.idl";
import "UniqueCreator.Graphics.Gpu.GraphicsComputeCommandContext.idl";
import "UniqueCreator.Graphics.Gpu.ComputeCommandContext.idl";

namespace UniqueCreator
{
    namespace Graphics
    {
        namespace Gpu
        {
            interface ISwapChainResources
            {
                void Resize( UInt32 width, UInt32 height );
                void SetSourceSize(UInt32 width, UInt32 height);
                void Present();


                void WaitForGpu();
                void WaitForFence(IFenceHandle v );
                void InsertWaitOn(IFenceHandle v );
                void Sync();
                void MoveToNextFrame();


                IGraphicsCommandContext          CreateGraphicsCommandContext();
                IComputeCommandContext           CreateComputeCommandContext();
                IGraphicsComputeCommandContext   CreateGraphicsComputeCommandContext();

                IBackBuffer BackBuffer{ get; };
            };
        }
    }
}


